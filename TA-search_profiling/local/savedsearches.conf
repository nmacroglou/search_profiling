[Index Sourcetypes - Lookup Gen]
action.email.useNSSubject = 1
alert.track = 0
cron_schedule = 57 * * * *
dispatch.earliest_time = 0
display.general.timeRangePicker.show = 0
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = TA-search_profiling
request.ui_dispatch_view = search
search = | tstats count where (index=* OR index=_*) by index, sourcetype | eval data=index."@".sourcetype | fields - count | outputlookup list_index_sourcetypes.csv

[Search Analytics - Summary Collect]
action.email.useNSSubject = 1
alert.track = 0
cron_schedule = */5 * * * *
dispatch.earliest_time = -5m@m
dispatch.latest_time = @m
display.general.timeRangePicker.show = 0
display.general.type = statistics
display.page.search.mode = verbose
display.page.search.tab = statistics
display.visualizations.custom.type = treemap_app.treemap
display.visualizations.show = 0
display.visualizations.type = custom
enableSched = 1
request.ui_dispatch_app = TA-search_profiling
request.ui_dispatch_view = search
search = index=_audit action=search search_id=* (info=granted search=*) OR info=completed [| inputlookup search_hosts.csv] | rex ", search='(?<search_string>[\s\S]+)', autojoin='\d"\
| fields info _time, user, search_id, search_string, search_type, status, savedsearch_name, api*, event_count, result_count, scan_count, data, exec_time, total_run_time\
| foreach * [eval <<FIELD>>=trim(<<FIELD>>,"'")]\
| eval api_Start_Time=if(apiStartTime=="ZERO_TIME",0,round(strptime(apiStartTime,"%a %b %d %H:%M:%S %Y"))), api_End_Time=if(apiEndTime=="ZERO_TIME",exec_time,round(strptime(apiEndTime,"%a %b %d %H:%M:%S %Y"))) \
| eval usesMacro=if(match(search_string,"`"),1,0)\
| expandmacro macro_field=usesMacro search_field=search_string output_field=search_string\
| eval search_type=if(info=="granted",case( like(search_string,"| from%") OR like(search_string,"| tstats%") OR like(search_string,"| pivot%"),"Meta",like(search_string,"|%"),"Generating",like(search_id,"'scheduler_%"),"Scheduled",like(search_id,"SummaryDirector_%") OR like(search_string,"| summarize%"),"Acceleration",match(search_id,"_search\d+_"),"Dashboard",like(search_id,"subsearch_%"),"Subsearch",like(search_id,"rt_%"),"Real-time",like(search_id,"ta_%"),"Typeahead",like(search_string,"pre%"),"Setup",1==1,"Ad-hoc"),"Completed")\
| search search_type IN("Scheduled","Ad-hoc","Real-time","Dashboard","Subsearch","Meta","Completed") \
| rex field=search_string max_match=1000 "index=\"?(?<idx>[a-zA-Z0-9_\*]+)(\s|\'|\"|\)|$)" \
| rex field=search_string max_match=1000 "sourcetype=\"?(?<st>[a-zA-Z0-9_\*:]+)(\s|\'|\")" \
| rex field=search_string "datamodel(:|=)\"?(?<dm>[^ ]+)\"? " \
| rex field=search_string "pivot\s+(?<dm>\S+)" \
| eval status=if(info=="granted" AND (search_type=="Scheduled" OR search_type=="Ad-hoc" OR search_type=="Dashboard" OR status=="Subsearch",case(isnull(idx) AND isnull(st),"BadSearch",match(idx,"\*") AND isnull(st),"StarIdxNoSourcetype",match(st,"\*") AND isnull(idx),"StarStNoIndex",match(st,"\*"),"StarSourcetype",match(idx,"\*"),"StarIdx", isnull(idx),"NoIndex",isnull(st),"NoSourceType",true(),"GoodSearch"),NULL) \
| lookup datamodel_info.csv dm OUTPUTNEW idx, st \
| lookup user_data_access.csv user, info OUTPUT allowedData defaultData  \
| mvmatch mode=super index_field=idx st_field=st defaults=defaultData allowed=allowedData pattern_field=none list=none output_field=data \
| rename info AS search_status \
| rex mode=sed field=search_string "s/\\[[^\\]]+\]+/ /g" \
| rex field=search_string "(?<base_search>search [^\|]+)" \
| eval usesBool=if(match(base_search,"(NOT|OR)"),1,0) \
| searchparse search_field=base_search list=allowedData output_field=thingky bool_field=usesBool \
| table _time search_status, user, search_id, search_string, search_type, status, savedsearch_name, api*, *_count, data, *_time, usesMacro usesBool dm\
| collect index=search_profiling marker="version=\"5.0\""

[Data Model - Lookup Gen]
action.email.useNSSubject = 1
alert.track = 0
cron_schedule = 59 * * * *
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
display.general.type = statistics
display.page.search.mode = verbose
display.page.search.tab = statistics
display.visualizations.custom.type = treemap_app.treemap
display.visualizations.show = 0
display.visualizations.type = custom
request.ui_dispatch_app = TA-search_profiling
request.ui_dispatch_view = search
search = | rest /services/datamodel/model  | eval description=mvindex(description,0) | spath input=description path=objects{0} output=francis | rex field=francis "\"search\":\"(?<search>[^\"]+)" | rex field=search max_match=1000 "index=\"?(?<idx>[a-zA-Z0-9_\*]+)(\s|\'|\"|$)" | rex field=search max_match=1000 "sourcetype=\"?(?<st>[a-zA-Z0-9_\*:]+)(\s|\'|\")" | rename eai:userName AS user, title as dm | table dm idx st search user displayName | outputlookup datamodel_info.csv

[User Data Info - Lookup Gen]
action.email.useNSSubject = 1
alert.track = 0
cron_schedule = 58 * * * *
dispatch.earliest_time = 0
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = TA-search_profiling
request.ui_dispatch_view = search
search = | rest /services/authentication/users \
| extract reload=true \
| table title , roles \
| mvexpand roles \
| rename title as user, roles as role\
| append [|makeresults | eval user="splunk-system-user", role="splunk-system-role"| table user role]\
| join Role type=left max=0 \
    [| rest /services/authorization/roles \
    | table title srchIndexesAllowed srchIndexesDefault \
    | rename title as role ] \
| eval srchIndexesDefault=split(srchIndexesDefault,"\
"), srchIndexesAllowed=split(srchIndexesAllowed,"\
") \
| stats values(srchIndexesDefault) AS srchIndexesDefault values(srchIndexesAllowed) AS srchIndexesAllowed values(role) AS role by user \
| append \
    [| inputlookup list_index_sourcetypes.csv ] \
| eventstats values(index) AS index, values(data) AS data \
| search user=* \
| mvmatch pattern_field=srchIndexesAllowed list=index output_field="srchIndexesAllowed" \
| mvmatch pattern_field=srchIndexesDefault list=index output_field="srchIndexesDefault"\
| mvmatch mode=x pattern_field=srchIndexesDefault list=data output_field="defaultData"\
| mvmatch mode=x pattern_field=srchIndexesAllowed list=data output_field="allowedData"\
| table user role defaultData allowedData\
| eval info="granted"\
| outputlookup user_data_access.csv

[Search Head Hosts - Lookup Gen]
action.email.useNSSubject = 1
alert.track = 0
cron_schedule = */15 * * * *
dispatch.earliest_time = 0
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = TA-search_profiling
request.ui_dispatch_view = search
search = |rest /services/shcluster/member/members | rename label AS host| table host | append [|rest /services/server/info | table splunk_server | rename splunk_server AS host] | outputlookup search_hosts.csv